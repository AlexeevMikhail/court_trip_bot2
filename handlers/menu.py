# handlers/menu.py

from telegram import ReplyKeyboardMarkup, Update
from telegram.ext import ContextTypes

from core.trip import start_trip, end_trip, handle_custom_org_input
from core.register import register

# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –∫–Ω–æ–ø–æ–∫ (ReplyKeyboard)
main_menu_keyboard = [
    ["üöÄ –ü–æ–µ–∑–¥–∫–∞", "üè¶ –í–æ–∑–≤—Ä–∞—Ç"],
    ["‚ûï –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "üíº –û—Ç—á—ë—Ç"]
]
main_menu_markup = ReplyKeyboardMarkup(main_menu_keyboard, resize_keyboard=True)

async def handle_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    # –ï—Å–ª–∏ –æ–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è (–ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ ¬´–î—Ä—É–≥–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è¬ª)
    if context.user_data.get("awaiting_custom_org"):
        context.user_data["awaiting_custom_org"] = False
        return await handle_custom_org_input(update, context)

    if text == "üöÄ –ü–æ–µ–∑–¥–∫–∞":
        await start_trip(update, context)
    elif text == "üè¶ –í–æ–∑–≤—Ä–∞—Ç":
        # –ó–¥–µ—Å—å end_trip –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é, –±–µ–∑ inline‚Äëcallback
        await end_trip(update, context)
    elif text == "‚ûï –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è":
        await register(update, context)
    elif text == "üíº –û—Ç—á—ë—Ç":
        await update.message.reply_text(
            "–î–ª—è –æ—Ç—á—ë—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:\n/report –î–î.MM.–ì–ì–ì–ì –î–î.MM.–ì–ì–ì–ì"
        )
    else:
        # –õ—é–±–æ–π –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=main_menu_markup
        )
