# bot.py
import os
import time
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters
from handlers.commands import register_command, trip_command, return_command, report_command
from handlers.callbacks import organization_callback
from handlers.menu import handle_main_menu
from dotenv import load_dotenv
from keep_alive import keep_alive
from scheduler import start_scheduler

load_dotenv()
keep_alive()
time.sleep(3)

TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    print("‚ùå BOT_TOKEN is missing")
    exit(1)

async def on_startup(app):
    # –£–±–∏—Ä–∞–µ–º webhook, —á—Ç–æ–±—ã —Ä–∞–∑—Ä–µ—à–∏—Ç—å polling
    await app.bot.delete_webhook(drop_pending_updates=True)
    print("üü¢ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω (–≤–µ–±—Ö—É–∫ —É–¥–∞–ª—ë–Ω, polling –≥–æ—Ç–æ–≤)")

def main():
    # init_db() ‚Äî –æ—Ç–∫–ª—é—á–µ–Ω–æ, –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ë–î –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç

    app = (
        ApplicationBuilder()
        .token(TOKEN)
        .job_queue(None)            # –æ—Ç–∫–ª—é—á–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π JobQueue PTB
        .post_init(on_startup)
        .build()
    )

    # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ –≤–∞—à–∏ —Ö—ç–Ω–¥–ª–µ—Ä—ã
    app.add_handler(register_command)
    app.add_handler(trip_command)
    app.add_handler(return_command)
    app.add_handler(report_command)
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_main_menu))
    app.add_handler(organization_callback)

    start_scheduler()

    print("‚è≥ –ó–∞–ø—É—Å–∫ polling...")
    app.run_polling(drop_pending_updates=True, allowed_updates=["message","callback_query"])

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")
    except Exception as e:
        print(f"üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        raise
